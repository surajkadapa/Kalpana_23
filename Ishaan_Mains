import pygame
import time 
import random
pygame.init()
display_width = 800
display_height = 600

black = (0,0,0)

lightgrey = (240,240,240)
white = (255,255,255)
grey = (75,75,75)
grey1 = (60,60,60)
"""
#####
carImg = pygame.image.load('racecar.png')

def car(x,y):
    gameDisplay.blit(carImg,(x,y))
car_width = 75

red = (200,0,0)
green = (0,200,0)

bright_red = (255,0,0)
bright_green = (0,255,0)
########
"""
gameDisplay = pygame.display.set_mode((display_width, display_height))
pygame.display.set_caption('The Game')
clock = pygame.time.Clock()

def text_objects(text, font, color):
    textSurface = font.render(text, True, color)
    return textSurface, textSurface.get_rect()

def button(msg,x,y,w,h,ic,ac,action=None):
    mouse = pygame.mouse.get_pos()
    click = pygame.mouse.get_pressed()
    #print(click)
    if x+w > mouse[0] > x and y+h > mouse[1] > y:
        pygame.draw.rect(gameDisplay, ac,(x,y,w,h))

        if click[0] == 1 and action != None:
            action()         
    else:
        pygame.draw.rect(gameDisplay, ic,(x,y,w,h))

    smallText = pygame.font.Font("/Users/ishaannene/Desktop/advanced_pixel-7.ttf",30)
    textSurf, textRect = text_objects(msg, smallText,black)
    textRect.center = ( (x+(w/2)), (y+(h/2)) )
    gameDisplay.blit(textSurf, textRect)


def game_intro():

    intro = True
    message = "Python"
    font = pygame.font.Font('/Users/ishaannene/Desktop/advanced_pixel-7.ttf',45)
    snip = font.render('',True,'white')
    counter = 0
    speed = 1
    done = False

    while intro:
        for event in pygame.event.get():
            #print(event)
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
                
        gameDisplay.fill(black)
        clock.tick(60)
        pygame.draw.rect(gameDisplay,'black',[0,300,800,200])
        if counter <speed*len(message):
            counter +=1
        elif counter >= speed*len(message):
            done = True
        snip = font.render(message[0:counter//speed], True, 'white')
        gameDisplay.blit(snip,(360,210))
        pygame.display.flip()

        button("GO!",350,280,100,50,white,grey,screen1)
        #button("Quit",550,450,100,50,red,bright_red,quitgame)

        pygame.display.update()
        clock.tick(15)

def screen1():
    gameExit = False
    while not gameExit:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                gameExit = True
                pygame.quit()
                quit()
        gameDisplay.fill(black)
        pygame.draw.rect(gameDisplay, grey1, pygame.Rect(20, 20, 760, 370))
        pygame.draw.rect(gameDisplay, lightgrey, pygame.Rect(40, 40, 720, 330))
        pygame.draw.rect(gameDisplay, white, pygame.Rect(300, 200, 100, 100))
        largeText = pygame.font.SysFont("padauk",115)
        TextSurf, TextRect = text_objects("Python", largeText,grey1)
        TextRect.center = ((display_width/2),210)

        gameDisplay.blit(TextSurf, TextRect)
        pygame.display.update()
        clock.tick(30)

        button("NEXT!",670,400,100,50,white,grey,screen2)
        pygame.display.update()
        
"""
        largeText1 = pygame.font.SysFont("padauk",115)
        TextSurf, TextRect = text_objects("Python", largeText1,grey)
        TextRect.center = ((display_width/1.975),200)
        
        gameDisplay.blit(TextSurf, TextRect)
"""

def screen2():
    gameExit = False
    while not gameExit:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                gameExit = True
                pygame.quit()
                quit()
        gameDisplay.fill(black)
        pygame.draw.rect(gameDisplay, grey1, pygame.Rect(20, 20, 760, 370))
        pygame.draw.rect(gameDisplay, lightgrey, pygame.Rect(40, 40, 720, 330))
        
        intro1 = True
        message = "<game name>  is an educational community for [computer programming]"
    
        message1 = "On the platform, software developers train on programming challenges."
        message2 = "This story revolves around an abandoned cabin that is situated"
        message3 = "The cabin was said to be cursed, and those who dared to."
        message4 = "enter never returned in the heart of the forest. The cabin was said to be cursed,."
        message5 = "and those who dared to enter never returned. But one day, "
        message6 = "an adventurer decided to explore the cabin and uncover its secrets."
        message7 = "This is a story based game where the user gets lost while exploring"
        message8 = "a forest and tries to seek shelter in an abandoned cabin. "
        message9 = "Little does he know about the series of challenges that he will"
        message10 = "face once he enters the cabin. The only way out is by solving"
        message11 = "all the problems else he would be stuck in there for a lifetime."

        
        font = pygame.font.Font('/Users/ishaannene/Desktop/advanced_pixel-7.ttf',32)
        snip = font.render('',True,'white')
        counter = 0
        speed = 7
        done = False

        while intro1:
            for event in pygame.event.get():
                #print(event)
                if event.type == pygame.QUIT:
                    pygame.quit()
                    quit()
                
            gameDisplay.fill(black)
            pygame.draw.rect(gameDisplay, grey1, pygame.Rect(20, 20, 760, 370))
            pygame.draw.rect(gameDisplay, lightgrey, pygame.Rect(40, 40, 720, 330))
            
            pygame.display.update()
            if counter <speed*len(message):
                counter +=1
            elif counter >= speed*len(message):
                done = True
            snip = font.render('',True,'white')
            
            button("NEXT!",670,400,100,50,white,grey,screen3)
            pygame.display.update()
            
            font.render(message[0:counter//speed], True, 'black')
            gameDisplay.blit(snip,(50,50))
            
            snip = font.render(message1[0:counter//speed], True, 'black')
            gameDisplay.blit(snip,(50,70))
            
            
            snip = font.render(message2[0:counter//speed], True, 'black')
            gameDisplay.blit(snip,(50,90))
            
            
            snip = font.render(message3[0:counter//speed], True, 'black')
            gameDisplay.blit(snip,(50,110))
            
            
            snip = font.render(message4[0:counter//speed], True, 'black')
            gameDisplay.blit(snip,(50,130))
            
            snip = font.render(message5[0:counter//speed], True, 'black')
            gameDisplay.blit(snip,(50,150))
            
            snip = font.render(message6[0:counter//speed], True, 'black')
            gameDisplay.blit(snip,(50,170))
            
            snip = font.render(message7[0:counter//speed], True, 'black')
            gameDisplay.blit(snip,(50,190))

            snip = font.render(message8[0:counter//speed], True, 'black')
            gameDisplay.blit(snip,(50,210))
            
            snip = font.render(message9[0:counter//speed], True, 'black')
            gameDisplay.blit(snip,(50,230))

            snip = font.render(message10[0:counter//speed], True, 'black')
            gameDisplay.blit(snip,(50,250))

            snip = font.render(message11[0:counter//speed], True, 'black')
            gameDisplay.blit(snip,(50,270))

            pygame.display.flip()
        
            clock.tick(50)

            button("NEXT!",670,400,100,50,white,grey,screen3)
            pygame.display.update()
            
def screen3():
    gameExit = False
    while not gameExit:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                gameExit = True
                pygame.quit()
                quit()
        gameDisplay.fill(black)
        pygame.draw.rect(gameDisplay, grey1, pygame.Rect(20, 20, 760, 500))
        pygame.draw.rect(gameDisplay, white, pygame.Rect(40, 40, 350, 460))

        pygame.draw.rect(gameDisplay, white, pygame.Rect(400, 40, 350, 230))

        pygame.draw.rect(gameDisplay, white, pygame.Rect(400, 280, 350, 220))
        
        button("NEXT!",670,540,110,50,white,grey,screen4)

        button("CODE EDITOR",20,540,150,50,white,grey,screen4)
        
        pygame.display.update()
def screen4():
    return
game_intro()
pygame.quit()
quit()
"""
<game name>  is an educational community for [computer programming]
On the platform, software developers train on programming challenges.
This story revolves around an abandoned cabin that is situated
in the heart of the forest. The cabin was said to be cursed,
and those who dared to enter never returned. But one day,
an adventurers decided to explore the cabin and uncover its secrets.

This is a story based game where the user gets lost while exploring
a forest and tries to seek shelter in an abandoned cabin. 

Little does he know about the series of challenges that he will face
once he enters the cabin. The only way out is by solving all the
problems else he would be stuck in there for a lifetime.
"""
